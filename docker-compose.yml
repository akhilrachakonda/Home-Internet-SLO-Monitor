services:
  prometheus:
    image: prom/prometheus:v2.54.0
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    ports: ["9090:9090"]

  alertmanager:
    image: prom/alertmanager:v0.27.0
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports: ["9093:9093"]
    depends_on: [prometheus]

  grafana:
    image: grafana/grafana:10.4.3
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST:-smtp.mail.yahoo.com:587}
      - GF_SMTP_USER=${SMTP_USER:-}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - GF_SMTP_STARTTLS_POLICY=${SMTP_STARTTLS_POLICY:-MandatoryStartTLS}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM_ADDRESS:-akhilrachakonda2004@yahoo.com}
      - GF_SMTP_FROM_NAME=${SMTP_FROM_NAME:-Home Internet SLO Monitor}
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports: ["3000:3000"]
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:2.9.0
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - ./loki-data:/loki
    ports: ["3100:3100"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.0
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - ./app:/var/log/app:ro
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

  iperf3:
    image: networkstatic/iperf3:latest
    command: -s
    restart: unless-stopped

  app:
    build: ./app
    environment:
      - PYTHONUNBUFFERED=1
    env_file: .env
    ports: ["8000:8000"]
    depends_on: [prometheus, alertmanager, grafana, loki, promtail, iperf3]
    volumes:
      - ./app:/app
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0 if urllib.request.urlopen('http://localhost:8000/healthz', timeout=2).status==200 else 1)"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
